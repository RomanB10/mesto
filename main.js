(()=>{"use strict";function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var t=function(){function t(e,n){var r=e.data,o=e.userId,i=e.handleOpenPopup,c=e.handleClickLike,u=e.handleClickDelete;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),this._selectors=n,this._name=r.name,this._link=r.link,this._likes=r.likes,this._handleOpenPopup=i,this._handleClickDelete=u,this._handleClickLike=c,this._data=r,this._id=r._id,this._owner=r.owner,this._userId=o}var n,r;return n=t,(r=[{key:"_getTemplate",value:function(){return document.querySelector(this._selectors.template).content.querySelector(this._selectors.rectangle).cloneNode(!0)}},{key:"generateCard",value:function(){return this._view=this._getTemplate(),this._cardImage=this._view.querySelector(this._selectors.image),this._text=this._view.querySelector(this._selectors.text),this._buttonLike=this._view.querySelector(this._selectors.buttonLike),this._buttonTrash=this._view.querySelector(this._selectors.buttonTrash),this._countLikes=this._view.querySelector(this._selectors.countLikes),this._textAlt="Здесь должно быть изображение '".concat(this._name,"'"),this._cardImage.src=this._link,this._text.textContent=this._name,this._cardImage.alt=this._textAlt,this._countLikes.textContent=this._likes.length,this._checkUserlike(),this._isTrash(),this._setEventListeners(),this._view}},{key:"_setEventListeners",value:function(){var e=this;this._buttonLike.addEventListener("click",(function(){e._handleClickLike(e)})),this._buttonTrash.addEventListener("click",(function(){e._handleClickDelete(e)})),this._cardImage.addEventListener("click",(function(){e._handleOpenPopup(e._data)}))}},{key:"changeCountLikes",value:function(e){this._countLikes.textContent=e.likes.length}},{key:"_checkUserlike",value:function(){var e=this;this._likes.some((function(t){return t._id===e._userId}))?this.addLike():this.removeLike()}},{key:"isliked",value:function(){return this._buttonLike.classList.contains("rectangle__button_active")}},{key:"switchLike",value:function(){this._buttonLike.classList.contains("rectangle__button_active")?this.removeLike(this):this.addLike(this)}},{key:"addLike",value:function(){this._buttonLike.classList.add("rectangle__button_active")}},{key:"removeLike",value:function(){this._buttonLike.classList.remove("rectangle__button_active")}},{key:"_isTrash",value:function(){this._owner._id===this._userId&&this._buttonTrash.classList.add("rectangle__button-trash_active")}},{key:"removeCard",value:function(){this._view.remove(),this._view=null}},{key:"getId",value:function(){return this._data._id}}])&&e(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),t}();function n(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var r=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._form=n,this._selectors=t,this._submitButton=this._form.querySelector(this._selectors.submitButtonSelector),this._inputList=Array.from(this._form.querySelectorAll(this._selectors.inputSelector))}var t,r;return t=e,(r=[{key:"_showInputError",value:function(e,t){var n=this._form.querySelector(".".concat(e.id,"-error"));e.classList.add(this._selectors.inputErrorClass),n.classList.add(this._selectors.errorClass),n.textContent=t}},{key:"_hideInputError",value:function(e){var t=this._form.querySelector(".".concat(e.id,"-error"));e.classList.remove(this._selectors.inputErrorClass),t.classList.remove(this._selectors.errorClass),t.textContent=""}},{key:"_checkFieldIsValid",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}},{key:"_hasInvalidInput",value:function(){return this._inputList.some((function(e){return!e.validity.valid}))}},{key:"resetFields",value:function(){var e=this;this._inputList.forEach((function(t){e._hideInputError(t)}))}},{key:"disableButton",value:function(){this._submitButton.setAttribute("disabled","disabled"),this._submitButton.classList.add(this._selectors.inactiveButtonClass)}},{key:"_toggleButtonState",value:function(){this._hasInvalidInput()?this.disableButton():(this._submitButton.removeAttribute("disabled"),this._submitButton.classList.remove(this._selectors.inactiveButtonClass))}},{key:"_setEventListeners",value:function(){var e=this;this._inputList.forEach((function(t){t.addEventListener("input",(function(){e._checkFieldIsValid(t),e._toggleButtonState()}))}))}},{key:"enableValidation",value:function(){this._setEventListeners()}}])&&n(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();function o(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var i=function(){function e(t,n){var r=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._container=n,this._renderer=r}var t,n;return t=e,(n=[{key:"addItem",value:function(e){this._container.append(e)}},{key:"prependItem",value:function(e){this._container.prepend(e)}},{key:"renderItems",value:function(e){var t=this;e.forEach((function(e){t._renderer(e)}))}}])&&o(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function c(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var u=function(){function e(t){var n,r,o=this,i=t.popupSelector;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),r=function(e){"Escape"===e.key&&o.close()},(n="_handleEscClose")in this?Object.defineProperty(this,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):this[n]=r,this._popup=document.querySelector(i)}var t,n;return t=e,(n=[{key:"open",value:function(){this._popup.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popup.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"setEventListeners",value:function(){var e=this;this._popup.addEventListener("mousedown",(function(t){(t.target===t.currentTarget||t.target.classList.contains("popup__close-btn"))&&e.close()}))}}])&&c(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function a(e){return a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},a(e)}function s(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function l(){return l="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=p(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},l.apply(this,arguments)}function p(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=d(e)););return e}function f(e,t){return f=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},f(e,t)}function h(e,t){if(t&&("object"===a(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function d(e){return d=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},d(e)}var _=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&f(e,t)}(c,e);var t,n,r,o,i=(r=c,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=d(r);if(o){var n=d(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return h(this,e)});function c(e,t){var n,r=e.popupSelector,o=e.handleSubmit;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,c),(n=i.call(this,{popupSelector:r}))._handleSubmit=o,n._form=t,n._inputList=n._form.querySelectorAll(".popup__input"),n._buttonSave=n._form.querySelector(".popup__submit-btn"),n}return t=c,(n=[{key:"_getInputValues",value:function(){var e=this;return this._formValues={},this._inputList.forEach((function(t){e._formValues[t.name]=t.value})),this._formValues}},{key:"setInputValues",value:function(e){this._inputList.forEach((function(t){t.value=e[t.name]}))}},{key:"setEventListeners",value:function(){var e=this;l(d(c.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",(function(t){t.preventDefault(t),e._handleSubmit(e._getInputValues())}))}},{key:"close",value:function(){l(d(c.prototype),"close",this).call(this),this._form.reset()}},{key:"renderLoading",value:function(e){this._buttonSave.textContent=e?"Сохранение...":"Сохранить"}}])&&s(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),c}(u);function y(e){return y="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},y(e)}function v(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function b(){return b="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=m(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},b.apply(this,arguments)}function m(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=w(e)););return e}function k(e,t){return k=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},k(e,t)}function g(e,t){if(t&&("object"===y(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function w(e){return w=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},w(e)}var L=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&k(e,t)}(c,e);var t,n,r,o,i=(r=c,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=w(r);if(o){var n=w(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return g(this,e)});function c(e){var t,n=e.popupSelector;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,c),(t=i.call(this,{popupSelector:n}))._placeImage=t._popup.querySelector(".popup__image-place"),t._placeCaption=t._popup.querySelector(".popup__caption"),t}return t=c,(n=[{key:"open",value:function(e){b(w(c.prototype),"open",this).call(this),this._placeCaption.textContent=e.name,this._placeImage.src=e.link,this._placeImage.alt="Здесь должно быть изображение'".concat(e.name,"'")}}])&&v(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),c}(u);function S(e){return S="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},S(e)}function O(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function P(){return P="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=j(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},P.apply(this,arguments)}function j(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=I(e)););return e}function E(e,t){return E=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},E(e,t)}function C(e,t){if(t&&("object"===S(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function I(e){return I=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},I(e)}var T=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&E(e,t)}(c,e);var t,n,r,o,i=(r=c,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=I(r);if(o){var n=I(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return C(this,e)});function c(e,t){var n,r=e.popupSelector,o=e.handleSubmit;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,c),(n=i.call(this,{popupSelector:r}))._handleSubmit=o,n._form=t,n}return t=c,(n=[{key:"submitHandlerAction",value:function(e){this._handleSubmit=e}},{key:"setEventListeners",value:function(){var e=this;P(I(c.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",(function(t){t.preventDefault(),e._handleSubmit(),e.close()}))}}])&&O(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),c}(u);function q(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var R=function(){function e(t){var n=t.userName,r=t.userDescription,o=t.userAvatar;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._userName=n,this._userDescription=r,this._userAvatar=o}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{name:this._userName.textContent,job:this._userDescription.textContent}}},{key:"setUserInfo",value:function(e){this._userName.textContent=e.name,this._userDescription.textContent=e.about,this._userAvatar.src=e.avatar}}])&&q(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function x(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var B,A=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._url=t.url,this._headers=t.headers}var t,n;return t=e,(n=[{key:"getAllCards",value:function(){return fetch("".concat(this._url,"/v1/cohort-51/cards"),{method:"GET",headers:this._headers}).then((function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}))}},{key:"addNewCard",value:function(e){return fetch("".concat(this._url,"/v1/cohort-51/cards"),{method:"POST",headers:this._headers,body:JSON.stringify(e)}).then((function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}))}},{key:"removeCard",value:function(e){return fetch("".concat(this._url,"/v1/cohort-51/cards/").concat(e),{method:"DELETE",headers:this._headers}).then((function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}))}},{key:"addLike",value:function(e){return fetch("".concat(this._url,"/v1/cohort-51/cards/").concat(e,"/likes"),{method:"PUT",headers:this._headers}).then((function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}))}},{key:"deleteLike",value:function(e){return fetch("".concat(this._url,"/v1/cohort-51/cards/").concat(e,"/likes"),{method:"DELETE",headers:this._headers}).then((function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}))}},{key:"getInfoUser",value:function(){return fetch("".concat(this._url,"/v1/cohort-51/users/me"),{headers:this._headers}).then((function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}))}},{key:"editInfoUser",value:function(e){return fetch("".concat(this._url,"/v1/cohort-51/users/me"),{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e.name,about:e.job})}).then((function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}))}},{key:"changeAvatarUser",value:function(e){return fetch("".concat(this._url,"/v1/cohort-51/users/me/avatar/"),{method:"PATCH",headers:this._headers,body:JSON.stringify(e)}).then((function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}))}}])&&x(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}(),D={template:"#rectangle-template",rectangle:".rectangle",countLikes:".rectangle__count-likes",image:".rectangle__image",text:".rectangle__text",buttonLike:".rectangle__button",buttonTrash:".rectangle__button-trash",profilePopup:".popup_type_edit-profile",cardPopup:".popup_type_add-card",imagePopup:".popup_type_open-image",confirmationPopup:".popup_type_confirmation",avatarPopup:".popup_type_change-avatar"},U={formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__submit-btn",inactiveButtonClass:"popup__submit-btn_inactive",inputErrorClass:"popup__input_type_error",errorClass:"popup__input-error_active",inputSpan:".popup__input-error"},V=document.querySelector(".photo-grid"),N=document.querySelector(D.profilePopup).querySelector(".popup__form"),F=document.querySelector(D.cardPopup).querySelector(".popup__form"),H=document.querySelector(D.confirmationPopup).querySelector(".popup__form"),J=document.querySelector(D.avatarPopup).querySelector(".popup__form"),z=document.querySelector(".profile__title"),G=document.querySelector(".profile__subtitle"),M=document.querySelector(".profile__image"),K=document.querySelector(".profile__edit-btn"),Q=document.querySelector(".profile__add-btn"),W=document.querySelector(".profile__avatar-btn"),X=new A({url:"https://mesto.nomoreparties.co",headers:{"Content-type":"application/json",authorization:"d90e3811-ba6b-4a7f-96a8-92745ac1e8db"}});function Y(e,n){var r=new t({data:e,userId:n,handleOpenPopup:function(e){ee.open(e)},handleClickLike:function(e){e.isliked()?X.deleteLike(e.getId()).then((function(t){e.switchLike(t),e.changeCountLikes(t)})).catch((function(e){console.log(e)})):X.addLike(e.getId()).then((function(t){e.switchLike(t),e.changeCountLikes(t)})).catch((function(e){alert(e)}))},handleClickDelete:function(e){var t=e.getId();te.open(e),te.submitHandlerAction((function(){X.removeCard(t).then((function(){e.removeCard()})).catch((function(e){console.log(e)}))}))}},D);return r.generateCard()}Promise.all([X.getAllCards(),X.getInfoUser()]).then((function(e){var t=e[0],n=e[1];B=n._id,Z.renderItems(t),$.setUserInfo(n)})).catch((function(e){console.log(e)}));var Z=new i({renderer:function(e){var t=Y(e,B);Z.addItem(t)}},V),$=new R({userName:z,userDescription:G,userAvatar:M}),ee=new L({popupSelector:D.imagePopup});ee.setEventListeners();var te=new T({popupSelector:D.confirmationPopup},H);te.setEventListeners();var ne=new _({popupSelector:D.avatarPopup,handleSubmit:function(e){var t=e;ne.renderLoading(!0),X.changeAvatarUser(t).then((function(e){$.setUserInfo(e),ne.close()})).catch((function(e){console.log(e)})).finally((function(){ne.renderLoading(!1)}))}},J);ne.setEventListeners();var re=new _({popupSelector:D.profilePopup,handleSubmit:function(e){var t=e;re.renderLoading(!0),X.editInfoUser(t).then((function(e){$.setUserInfo(e),re.close()})).catch((function(e){console.log(e)})).finally((function(){re.renderLoading(!1)}))}},N);re.setEventListeners();var oe=new _({popupSelector:D.cardPopup,handleSubmit:function(e){var t={link:e["place-image"],name:e["place-name"]};oe.renderLoading(!0),X.addNewCard(t).then((function(e){Z.prependItem(Y(e,B)),oe.close()})).catch((function(e){console.log(e)})).finally((function(){oe.renderLoading(!1)}))}},F);oe.setEventListeners();var ie=new r(U,N);ie.enableValidation();var ce=new r(U,F);ce.enableValidation();var ue=new r(U,J);ue.enableValidation(),K.addEventListener("click",(function(){re.open(),re.setInputValues($.getUserInfo()),ie.resetFields()})),Q.addEventListener("click",(function(){oe.open(),ce.disableButton(),ce.resetFields()})),W.addEventListener("click",(function(){ne.open(),ue.resetFields()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,