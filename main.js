(()=>{"use strict";var e={874:(e,t,n)=>{e.exports=n.p+"9b797d63dc3f90c5f676.png"},96:(e,t,n)=>{e.exports=n.p+"06f72e762eb2bcad6421.jpg"},821:(e,t,n)=>{e.exports=n.p+"aae73e570df8ee36bbc7.jpg"},298:(e,t,n)=>{e.exports=n.p+"79df584bb33a87d14542.jpg"},190:(e,t,n)=>{e.exports=n.p+"aeed29cd3a76ba675234.jpg"},35:(e,t,n)=>{e.exports=n.p+"a73c87b787d8a96189fc.jpg"}},t={};function n(r){var o=t[r];if(void 0!==o)return o.exports;var i=t[r]={exports:{}};return e[r](i,i.exports,n),i.exports}n.m=e,n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.p="",n.b=document.baseURI||self.location.href,(()=>{function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function t(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var r=function(){function n(e,r){var o=this,i=e.data,a=e.handleOpenPopup;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,n),t(this,"_handleClickLike",(function(e){e.target.classList.toggle("rectangle__button_active")})),t(this,"_handleClickTrash",(function(){o._view.remove()})),this._selectors=r,this._name=i.name,this._link=i.link,this._handleOpenPopup=a,this._data=i}var r,o;return r=n,(o=[{key:"_getTemplate",value:function(){return document.querySelector(this._selectors.template).content.querySelector(this._selectors.rectangle).cloneNode(!0)}},{key:"generateCard",value:function(){return this._view=this._getTemplate(),this._cardImage=this._view.querySelector(this._selectors.image),this._text=this._view.querySelector(this._selectors.text),this._buttonLike=this._view.querySelector(this._selectors.buttonLike),this._buttonTrash=this._view.querySelector(this._selectors.buttonTrash),this._textAlt="Здесь должно быть изображение '".concat(this._name,"'"),this._cardImage.src=this._link,this._text.textContent=this._name,this._cardImage.alt=this._textAlt,this._setEventListeners(),this._view}},{key:"_setEventListeners",value:function(){var e=this;this._buttonLike.addEventListener("click",this._handleClickLike),this._buttonTrash.addEventListener("click",this._handleClickTrash),this._cardImage.addEventListener("click",(function(){e._handleOpenPopup(e._data)}))}}])&&e(r.prototype,o),Object.defineProperty(r,"prototype",{writable:!1}),n}();function o(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var i=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._form=n,this._selectors=t,this._submitButton=this._form.querySelector(this._selectors.submitButtonSelector),this._inputList=Array.from(this._form.querySelectorAll(this._selectors.inputSelector))}var t,n;return t=e,(n=[{key:"_showInputError",value:function(e,t){var n=this._form.querySelector(".".concat(e.id,"-error"));e.classList.add(this._selectors.inputErrorClass),n.classList.add(this._selectors.errorClass),n.textContent=t}},{key:"_hideInputError",value:function(e){var t=this._form.querySelector(".".concat(e.id,"-error"));e.classList.remove(this._selectors.inputErrorClass),t.classList.remove(this._selectors.errorClass),t.textContent=""}},{key:"_checkFieldIsValid",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}},{key:"_hasInvalidInput",value:function(){return this._inputList.some((function(e){return!e.validity.valid}))}},{key:"resetFields",value:function(){var e=this;this._inputList.forEach((function(t){e._hideInputError(t)}))}},{key:"disableButton",value:function(){this._submitButton.setAttribute("disabled","disabled"),this._submitButton.classList.add(this._selectors.inactiveButtonClass)}},{key:"_toggleButtonState",value:function(){this._hasInvalidInput()?this.disableButton():(this._submitButton.removeAttribute("disabled"),this._submitButton.classList.remove(this._selectors.inactiveButtonClass))}},{key:"_setEventListeners",value:function(){var e=this;this._inputList.forEach((function(t){t.addEventListener("input",(function(){e._checkFieldIsValid(t),e._toggleButtonState()}))}))}},{key:"enableValidation",value:function(){this._setEventListeners()}}])&&o(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function a(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var u=function(){function e(t,n){var r=t.items,o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._initialArray=r,this._container=n,this._renderer=o}var t,n;return t=e,(n=[{key:"addItem",value:function(e){this._container.append(e)}},{key:"prependItem",value:function(e){this._container.prepend(e)}},{key:"renderItems",value:function(){var e=this;this._initialArray.forEach((function(t){e._renderer(t)}))}}])&&a(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function s(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var c=function(){function e(t){var n,r,o=this,i=t.popupSelector;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),r=function(e){"Escape"===e.key&&o.close()},(n="_handleEscClose")in this?Object.defineProperty(this,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):this[n]=r,this._popup=document.querySelector(i)}var t,n;return t=e,(n=[{key:"open",value:function(){this._popup.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popup.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"setEventListeners",value:function(){var e=this;this._popup.addEventListener("mousedown",(function(t){(t.target===t.currentTarget||t.target.classList.contains("popup__close-btn"))&&e.close()}))}}])&&s(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function l(e){return l="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},l(e)}function p(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function f(){return f="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=h(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},f.apply(this,arguments)}function h(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=d(e)););return e}function _(e,t){return _=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},_(e,t)}function y(e,t){if(t&&("object"===l(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function d(e){return d=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},d(e)}var b=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&_(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=d(r);if(o){var n=d(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return y(this,e)});function a(e,t){var n,r=e.popupSelector,o=e.handleSubmit;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(n=i.call(this,{popupSelector:r}))._handleSubmit=o,n._form=t,n._inputList=n._form.querySelectorAll(".popup__input"),n}return t=a,(n=[{key:"_getInputValues",value:function(){var e=this;return this._formValues={},this._inputList.forEach((function(t){e._formValues[t.name]=t.value})),this._formValues}},{key:"setInputValues",value:function(e){this._inputList.forEach((function(t){t.value=e[t.name]}))}},{key:"setEventListeners",value:function(){var e=this;f(d(a.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",(function(t){t.preventDefault(t),e._handleSubmit(e._getInputValues()),e.close()}))}},{key:"close",value:function(){f(d(a.prototype),"close",this).call(this),this._form.reset()}}])&&p(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(c);function v(e){return v="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},v(e)}function m(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function g(){return g="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=w(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},g.apply(this,arguments)}function w(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=S(e)););return e}function k(e,t){return k=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},k(e,t)}function O(e,t){if(t&&("object"===v(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function S(e){return S=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},S(e)}var E=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&k(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=S(r);if(o){var n=S(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return O(this,e)});function a(e){var t,n=e.popupSelector;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,{popupSelector:n}))._placeImage=t._popup.querySelector(".popup__image-place"),t._placeCaption=t._popup.querySelector(".popup__caption"),t}return t=a,(n=[{key:"open",value:function(e){g(S(a.prototype),"open",this).call(this),this._placeCaption.textContent=e.name,this._placeImage.src=e.link,this._placeImage.alt="Здесь должно быть изображение'".concat(e.name,"'")}}])&&m(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(c);function L(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var P=function(){function e(t){var n=t.userName,r=t.userDescription;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._userName=n,this._userDescription=r}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{name:this._userName.textContent,job:this._userDescription.textContent}}},{key:"setUserInfo",value:function(e){this._userName.textContent=e.name,this._userDescription.textContent=e.job}}])&&L(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}(),j=new URL(n(821),n.b),C=new URL(n(874),n.b),I=new URL(n(35),n.b),x=new URL(n(298),n.b),R=new URL(n(96),n.b),q=new URL(n(190),n.b),T={template:"#rectangle-template",rectangle:".rectangle",image:".rectangle__image",text:".rectangle__text",buttonLike:".rectangle__button",buttonTrash:".rectangle__button-trash",profilePopup:".popup_type_edit-profile",cardPopup:".popup_type_add-card",imagePopup:".popup_type_open-image"},B={formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__submit-btn",inactiveButtonClass:"popup__submit-btn_inactive",inputErrorClass:"popup__input_type_error",errorClass:"popup__input-error_active",inputSpan:".popup__input-error"},V=document.querySelector(".photo-grid"),U=document.querySelector(T.profilePopup).querySelector(".popup__form"),D=document.querySelector(T.cardPopup).querySelector(".popup__form"),A=document.querySelector(".profile__title"),N=document.querySelector(".profile__subtitle"),F=document.querySelector(".profile__edit-btn"),M=document.querySelector(".profile__add-btn"),z=[{name:"Карачаево-Черкесская Республика",link:j},{name:"Ай петри",link:C},{name:"Щвейцария",link:I},{name:"Гаваи",link:x},{name:"Великая китайская стена",link:R},{name:"Фудзи",link:q}],G=new E({popupSelector:T.imagePopup});function H(e){var t=new r({data:e,handleOpenPopup:function(e){G.open(e)}},T);return t.generateCard()}G.setEventListeners();var J=new u({items:z,renderer:function(e){var t=H(e);J.addItem(t)}},V);J.renderItems();var K=new i(B,U);K.enableValidation();var Q=new i(B,D);Q.enableValidation();var W=new P({userName:A,userDescription:N}),X=new b({popupSelector:T.profilePopup,handleSubmit:function(e){W.setUserInfo(e)}},U);X.setEventListeners();var Y=new b({popupSelector:T.cardPopup,handleSubmit:function(e){var t=H({link:e["place-image"],name:e["place-name"]});J.prependItem(t)}},D);Y.setEventListeners(),F.addEventListener("click",(function(){X.open(),X.setInputValues(W.getUserInfo()),K.resetFields()})),M.addEventListener("click",(function(){Y.open(),Q.disableButton(),Q.resetFields()}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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RixHQUNiNEksRUFBS0UsWUFBWTlJLEVBQ2xCLEdBRUh3SCxHQUVGcUIsRUFBcUJULG9CQUdyQixJQUFNVyxFQUF1QixJQUFJdEQsRUFDL0IsQ0FDRVIsY0FBZWxGLEVBQVVtSCxVQUN6QnhCLGFBQWMsU0FBQzFGLEdBQ2IsSUFBTXNJLEVBQWNOLEVBQVcsQ0FDN0JuSCxLQUFNYixFQUFLLGVBQ1hXLEtBQU1YLEVBQUssZ0JBRWJxSSxFQUFnQlcsWUFBWVYsRUFDN0IsR0FFSGIsR0FFRnNCLEVBQXFCWCxvQkFHckJSLEVBQXVCekYsaUJBQWlCLFNBQVMsV0FDL0MwRyxFQUFxQlgsT0FDckJXLEVBQXFCSSxlQUFlTCxFQUFLTSxlQUN6Q1QsRUFBeUJVLGFBQzFCLElBR0R0QixFQUFpQjFGLGlCQUFpQixTQUFTLFdBQ3pDNEcsRUFBcUJiLE9BQ3JCUyxFQUFxQnpFLGdCQUNyQnlFLEVBQXFCUSxhQUN0QixHIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWVzdG8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vbWVzdG8vd2VicGFjay9ydW50aW1lL2hhc093blByb3BlcnR5IHNob3J0aGFuZCIsIndlYnBhY2s6Ly9tZXN0by93ZWJwYWNrL3J1bnRpbWUvcHVibGljUGF0aCIsIndlYnBhY2s6Ly9tZXN0by93ZWJwYWNrL3J1bnRpbWUvanNvbnAgY2h1bmsgbG9hZGluZyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9jb21wb25lbnRzL0NhcmQuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvY29tcG9uZW50cy9Gb3JtVmFsaWRhdG9yLmpzIiwid2VicGFjazovL21lc3RvLy4vc3JjL2NvbXBvbmVudHMvU2VjdGlvbi5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9jb21wb25lbnRzL1BvcHVwLmpzIiwid2VicGFjazovL21lc3RvLy4vc3JjL2NvbXBvbmVudHMvUG9wdXBXaXRoRm9ybS5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9jb21wb25lbnRzL1BvcHVwV2l0aEltYWdlLmpzIiwid2VicGFjazovL21lc3RvLy4vc3JjL2NvbXBvbmVudHMvVXNlckluZm8uanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvdXRpbHMvY29uc3RhdG50cy5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9wYWdlcy9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBUaGUgbW9kdWxlIGNhY2hlXG52YXIgX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fID0ge307XG5cbi8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG5mdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuXHR2YXIgY2FjaGVkTW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXTtcblx0aWYgKGNhY2hlZE1vZHVsZSAhPT0gdW5kZWZpbmVkKSB7XG5cdFx0cmV0dXJuIGNhY2hlZE1vZHVsZS5leHBvcnRzO1xuXHR9XG5cdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG5cdHZhciBtb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdID0ge1xuXHRcdC8vIG5vIG1vZHVsZS5pZCBuZWVkZWRcblx0XHQvLyBubyBtb2R1bGUubG9hZGVkIG5lZWRlZFxuXHRcdGV4cG9ydHM6IHt9XG5cdH07XG5cblx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG5cdF9fd2VicGFja19tb2R1bGVzX19bbW9kdWxlSWRdKG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG5cdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG5cdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbn1cblxuLy8gZXhwb3NlIHRoZSBtb2R1bGVzIG9iamVjdCAoX193ZWJwYWNrX21vZHVsZXNfXylcbl9fd2VicGFja19yZXF1aXJlX18ubSA9IF9fd2VicGFja19tb2R1bGVzX187XG5cbiIsIl9fd2VicGFja19yZXF1aXJlX18ubyA9IChvYmosIHByb3ApID0+IChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBwcm9wKSkiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLnAgPSBcIlwiOyIsIl9fd2VicGFja19yZXF1aXJlX18uYiA9IGRvY3VtZW50LmJhc2VVUkkgfHwgc2VsZi5sb2NhdGlvbi5ocmVmO1xuXG4vLyBvYmplY3QgdG8gc3RvcmUgbG9hZGVkIGFuZCBsb2FkaW5nIGNodW5rc1xuLy8gdW5kZWZpbmVkID0gY2h1bmsgbm90IGxvYWRlZCwgbnVsbCA9IGNodW5rIHByZWxvYWRlZC9wcmVmZXRjaGVkXG4vLyBbcmVzb2x2ZSwgcmVqZWN0LCBQcm9taXNlXSA9IGNodW5rIGxvYWRpbmcsIDAgPSBjaHVuayBsb2FkZWRcbnZhciBpbnN0YWxsZWRDaHVua3MgPSB7XG5cdDE3OTogMFxufTtcblxuLy8gbm8gY2h1bmsgb24gZGVtYW5kIGxvYWRpbmdcblxuLy8gbm8gcHJlZmV0Y2hpbmdcblxuLy8gbm8gcHJlbG9hZGVkXG5cbi8vIG5vIEhNUlxuXG4vLyBubyBITVIgbWFuaWZlc3RcblxuLy8gbm8gb24gY2h1bmtzIGxvYWRlZFxuXG4vLyBubyBqc29ucCBmdW5jdGlvbiIsImV4cG9ydCBjbGFzcyBDYXJkIHtcbiAgY29uc3RydWN0b3IoeyBkYXRhLCBoYW5kbGVPcGVuUG9wdXAgfSwgc2VsZWN0b3JzKSB7XG4gICAgdGhpcy5fc2VsZWN0b3JzID0gc2VsZWN0b3JzO1xuICAgIHRoaXMuX25hbWUgPSBkYXRhLm5hbWU7XG4gICAgdGhpcy5fbGluayA9IGRhdGEubGluaztcbiAgICB0aGlzLl9oYW5kbGVPcGVuUG9wdXAgPSBoYW5kbGVPcGVuUG9wdXA7XG4gICAgdGhpcy5fZGF0YSA9IGRhdGE7XG4gIH1cbiAgLy/Qn9GA0LjQstCw0YLQvdGL0Lkg0LzQtdGC0L7QtCDQv9C+0LvRg9GH0LXQvdC40Y8g0YjQsNCx0LvQvtC90LBcbiAgX2dldFRlbXBsYXRlKCkge1xuICAgIGNvbnN0IGNhcmRFbGVtZW50ID0gZG9jdW1lbnRcbiAgICAgIC5xdWVyeVNlbGVjdG9yKHRoaXMuX3NlbGVjdG9ycy50ZW1wbGF0ZSlcbiAgICAgIC5jb250ZW50LnF1ZXJ5U2VsZWN0b3IodGhpcy5fc2VsZWN0b3JzLnJlY3RhbmdsZSlcbiAgICAgIC5jbG9uZU5vZGUodHJ1ZSk7XG5cbiAgICByZXR1cm4gY2FyZEVsZW1lbnQ7XG4gIH1cbiAgLy/Qn9GD0LHQu9C40YfQvdGL0Lkg0LzQtdGC0L7QtCDRgdC+0LfQtNCw0L3QuNGPINC90L7QstC+0Lkg0LrQsNGA0YLRiyDRgSDQvNC10YHRgtC+0LxcbiAgZ2VuZXJhdGVDYXJkKCkge1xuICAgIHRoaXMuX3ZpZXcgPSB0aGlzLl9nZXRUZW1wbGF0ZSgpO1xuICAgIHRoaXMuX2NhcmRJbWFnZSA9IHRoaXMuX3ZpZXcucXVlcnlTZWxlY3Rvcih0aGlzLl9zZWxlY3RvcnMuaW1hZ2UpO1xuICAgIHRoaXMuX3RleHQgPSB0aGlzLl92aWV3LnF1ZXJ5U2VsZWN0b3IodGhpcy5fc2VsZWN0b3JzLnRleHQpO1xuICAgIHRoaXMuX2J1dHRvbkxpa2UgPSB0aGlzLl92aWV3LnF1ZXJ5U2VsZWN0b3IodGhpcy5fc2VsZWN0b3JzLmJ1dHRvbkxpa2UpO1xuICAgIHRoaXMuX2J1dHRvblRyYXNoID0gdGhpcy5fdmlldy5xdWVyeVNlbGVjdG9yKHRoaXMuX3NlbGVjdG9ycy5idXR0b25UcmFzaCk7XG4gICAgdGhpcy5fdGV4dEFsdCA9IGDQl9C00LXRgdGMINC00L7Qu9C20L3QviDQsdGL0YLRjCDQuNC30L7QsdGA0LDQttC10L3QuNC1ICcke3RoaXMuX25hbWV9J2A7XG4gICAgdGhpcy5fY2FyZEltYWdlLnNyYyA9IHRoaXMuX2xpbms7XG4gICAgdGhpcy5fdGV4dC50ZXh0Q29udGVudCA9IHRoaXMuX25hbWU7XG4gICAgdGhpcy5fY2FyZEltYWdlLmFsdCA9IHRoaXMuX3RleHRBbHQ7XG4gICAgdGhpcy5fc2V0RXZlbnRMaXN0ZW5lcnMoKTtcbiAgICByZXR1cm4gdGhpcy5fdmlldztcbiAgfVxuICBfc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XG4gICAgLy/QvtGC0YDQsNCx0L7RgtC60LAg0LvQsNC50LrQsCDQv9GA0Lgg0LrQu9C40LrQtVxuICAgIHRoaXMuX2J1dHRvbkxpa2UuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIHRoaXMuX2hhbmRsZUNsaWNrTGlrZSk7XG4gICAgLy/Rg9C00LDQu9C10L3QuNC1INC60LDRgNGC0L7Rh9C60Lgg0L/RgNC4INC60LvQuNC60LUg0L3QsCDQutC+0YDQt9C40L3Rg1xuICAgIHRoaXMuX2J1dHRvblRyYXNoLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCB0aGlzLl9oYW5kbGVDbGlja1RyYXNoKTtcbiAgICAvL9C+0YLQutGA0YvRgtC40LUg0L/QvtC/0LDQv9CwINC/0YDQuCDQutC70LjQutC1INC90LAg0LjQt9C+0LHRgNCw0LbQtdC90LjQtVxuICAgIHRoaXMuX2NhcmRJbWFnZS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgICAgdGhpcy5faGFuZGxlT3BlblBvcHVwKHRoaXMuX2RhdGEpO1xuICAgIH0pO1xuICB9XG5cbiAgLy/Qn9GA0LjQstCw0YLQvdGL0Lkg0LzQtdGC0L7QtCBsaWtlXG4gIF9oYW5kbGVDbGlja0xpa2UgPSAoZXZ0KSA9PiB7XG4gICAgZXZ0LnRhcmdldC5jbGFzc0xpc3QudG9nZ2xlKFwicmVjdGFuZ2xlX19idXR0b25fYWN0aXZlXCIpO1xuICB9O1xuICAvL9Cf0YDQuNCy0LDRgtC90YvQuSDQvNC10YLQvtC0IFRyYXNoXG4gIF9oYW5kbGVDbGlja1RyYXNoID0gKCkgPT4ge1xuICAgIHRoaXMuX3ZpZXcucmVtb3ZlKCk7XG4gIH07XG59XG4iLCJleHBvcnQgY2xhc3MgRm9ybVZhbGlkYXRvciB7XG4gIGNvbnN0cnVjdG9yKHNlbGVjdG9ycywgZm9ybSkge1xuICAgIHRoaXMuX2Zvcm0gPSBmb3JtO1xuICAgIHRoaXMuX3NlbGVjdG9ycyA9IHNlbGVjdG9ycztcbiAgICB0aGlzLl9zdWJtaXRCdXR0b24gPSB0aGlzLl9mb3JtLnF1ZXJ5U2VsZWN0b3IodGhpcy5fc2VsZWN0b3JzLnN1Ym1pdEJ1dHRvblNlbGVjdG9yKTtcbiAgICB0aGlzLl9pbnB1dExpc3QgPSBBcnJheS5mcm9tKHRoaXMuX2Zvcm0ucXVlcnlTZWxlY3RvckFsbCh0aGlzLl9zZWxlY3RvcnMuaW5wdXRTZWxlY3RvcikpO1xuICB9XG5cbiAgLy/RhNGD0L3QutGG0LjRjywg0LrQvtGC0L7RgNCw0Y8g0LTQvtCx0LDQstC70Y/QtdGCINC60LvQsNGB0YEg0YEg0L7RiNC40LHQutC+0LlcbiAgX3Nob3dJbnB1dEVycm9yKGlucHV0RWxlbWVudCwgZXJyb3JNZXNzYWdlKSB7XG4gICAgY29uc3QgZXJyb3JFbGVtZW50ID0gdGhpcy5fZm9ybS5xdWVyeVNlbGVjdG9yKGAuJHtpbnB1dEVsZW1lbnQuaWR9LWVycm9yYCk7XG4gICAgaW5wdXRFbGVtZW50LmNsYXNzTGlzdC5hZGQodGhpcy5fc2VsZWN0b3JzLmlucHV0RXJyb3JDbGFzcyk7XG4gICAgZXJyb3JFbGVtZW50LmNsYXNzTGlzdC5hZGQodGhpcy5fc2VsZWN0b3JzLmVycm9yQ2xhc3MpO1xuICAgIGVycm9yRWxlbWVudC50ZXh0Q29udGVudCA9IGVycm9yTWVzc2FnZTtcbiAgfVxuXG4gIC8v0YTRg9C90LrRhtC40Y8sINC60L7RgtC+0YDQsNGPINGD0LTQsNC70Y/QtdGCINC60LvQsNGB0YEg0YEg0L7RiNC40LHQutC+0LlcbiAgX2hpZGVJbnB1dEVycm9yKGlucHV0RWxlbWVudCkge1xuICAgIGNvbnN0IGVycm9yRWxlbWVudCA9IHRoaXMuX2Zvcm0ucXVlcnlTZWxlY3RvcihgLiR7aW5wdXRFbGVtZW50LmlkfS1lcnJvcmApO1xuICAgIGlucHV0RWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX3NlbGVjdG9ycy5pbnB1dEVycm9yQ2xhc3MpO1xuICAgIGVycm9yRWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX3NlbGVjdG9ycy5lcnJvckNsYXNzKTtcbiAgICBlcnJvckVsZW1lbnQudGV4dENvbnRlbnQgPSBcIlwiO1xuICB9XG5cbiAgLy/RhNGD0L3QutGG0LjRjywg0LrQvtGC0L7RgNCw0Y8g0L/RgNC+0LLQtdGA0Y/QtdGCINCy0LDQu9C40LTQvdC+0YHRgtGMINC+0LTQvdC+0LPQviDQv9C+0LvRj1xuICBfY2hlY2tGaWVsZElzVmFsaWQoaW5wdXRFbGVtZW50KSB7XG4gICAgaWYgKCFpbnB1dEVsZW1lbnQudmFsaWRpdHkudmFsaWQpIHtcbiAgICAgIHRoaXMuX3Nob3dJbnB1dEVycm9yKGlucHV0RWxlbWVudCwgaW5wdXRFbGVtZW50LnZhbGlkYXRpb25NZXNzYWdlKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5faGlkZUlucHV0RXJyb3IoaW5wdXRFbGVtZW50KTtcbiAgICB9XG4gIH1cblxuICAvL9GE0YPQvdC60YbQuNGPINC/0YDQvtCy0LXRgNC60Lgg0L3QsNC70LjRh9C40Y8g0L3QtdCy0LDQu9C40LTQvdC+0LPQviDQv9C+0LvRj1xuICBfaGFzSW52YWxpZElucHV0KCkge1xuICAgIC8v0L/RgNC+0YXQvtC00LjQvCDQv9C+INC80LDRgdGB0LjQstGDINC80LXRgtC+0LTQvtC8IHNvbWVcbiAgICByZXR1cm4gdGhpcy5faW5wdXRMaXN0LnNvbWUoKGlucHV0RWxlbWVudCkgPT4ge1xuICAgICAgLy/QtdGB0LvQuCDQv9C+0LvQtSDQvdC1INCy0LDQu9C40LTQvdC+LCDQutC+0LvQsdGN0Log0LLQtdGA0L3QudGCIHRydWVcbiAgICAgIC8v0J7QsdGF0L7QtCDQvNCw0YHRgdC40LLQsCDQv9GA0LXQutGA0LDRgtC40YLRgdGPINC4INCy0YHRjyDRhNGD0L3QutGG0LjRj1xuICAgICAgLy9oYXNJbnZhbGlkSW5wdXQg0LLQtdGA0L3QtdGCIHRydWVcbiAgICAgIHJldHVybiAhaW5wdXRFbGVtZW50LnZhbGlkaXR5LnZhbGlkO1xuICAgIH0pO1xuICB9XG5cbiAgLy/QntGH0LjRgdGC0LrQsCDQv9C+0LvQtdC5INC+0YIg0L7RiNC40LHQvtC6XG4gIHJlc2V0RmllbGRzKCkge1xuICAgIHRoaXMuX2lucHV0TGlzdC5mb3JFYWNoKChpbnB1dCkgPT4ge1xuICAgICAgICB0aGlzLl9oaWRlSW5wdXRFcnJvcihpbnB1dClcbiAgICB9KTtcbiAgfVxuXG4gIGRpc2FibGVCdXR0b24oKSB7XG4gICAgdGhpcy5fc3VibWl0QnV0dG9uLnNldEF0dHJpYnV0ZShcImRpc2FibGVkXCIsIFwiZGlzYWJsZWRcIik7IC8v0L7RgtC60LvRjtGH0LXQvdC40LUg0LrQvdC+0L/QutC4XG4gICAgdGhpcy5fc3VibWl0QnV0dG9uLmNsYXNzTGlzdC5hZGQodGhpcy5fc2VsZWN0b3JzLmluYWN0aXZlQnV0dG9uQ2xhc3MpOyAvLyDQtNC+0LHQsNCy0LvQtdC90LjQtSDQutC70LDRgdGB0LAg0L7RgtC60LvRjtGH0LXQvdC90L7QuSDQutC90L7Qv9C60LgqL1xuICB9XG4gIC8v0YTRg9C90LrRhtC40Y8g0LLQutC7L9Cy0YvQutC7INC/0YDQuCDQstCw0LvQuNC00L3QvtC5L9C90LXQstCw0LvQuNC00L3QvtC5INGE0L7RgNC80LVcbiAgX3RvZ2dsZUJ1dHRvblN0YXRlKCkge1xuICAgIGlmICh0aGlzLl9oYXNJbnZhbGlkSW5wdXQoKSkge1xuICAgICAgdGhpcy5kaXNhYmxlQnV0dG9uKCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbi5yZW1vdmVBdHRyaWJ1dGUoXCJkaXNhYmxlZFwiKTsgLy/QvtGC0LrQu9GO0YfQtdC90LjQtSDQutC90L7Qv9C60LhcbiAgICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbi5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX3NlbGVjdG9ycy5pbmFjdGl2ZUJ1dHRvbkNsYXNzKTtcbiAgICB9XG4gIH1cblxuICAvL9GE0YPQvdC60YbQuNGPINC00L7QsdCw0LLQu9C10L3QuNGPINC+0LHRgNCw0LHQvtGC0YfQuNC60L7QsiDQstGB0LXQvCDQv9C+0LvRj9C8INGE0L7RgNC80YtcbiAgX3NldEV2ZW50TGlzdGVuZXJzKCkge1xuICAgIC8v0J7QsdC+0LnQtNC10Lwg0LLRgdC1INGN0LvQtdC80LXQvdGC0Ysg0LrQvtC70LvQtdC60YbQuNC4XG4gICAgdGhpcy5faW5wdXRMaXN0LmZvckVhY2goKGlucHV0RWxlbWVudCkgPT4ge1xuICAgICAgLy/QutCw0LbQtNC+0LzRgyDQv9C+0LvRjiDQtNC+0LHQsNCy0LjQvCDQvtCx0YDQsNCx0L7RgtGH0LjQuiDRgdC+0LHRi9GC0LjRjyBpbnB1dFxuICAgICAgaW5wdXRFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJpbnB1dFwiLCAoKSA9PiB7XG4gICAgICAgIHRoaXMuX2NoZWNrRmllbGRJc1ZhbGlkKGlucHV0RWxlbWVudCk7XG4gICAgICAgIC8v0LLRi9C30L7QstC10LwgdG9nZ2xlQnV0dG9uU3RhdGVcbiAgICAgICAgdGhpcy5fdG9nZ2xlQnV0dG9uU3RhdGUoKTtcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG5cbiAgLy/RhNGD0L3QutGG0LjRjyDQstCw0LvQuNC00LDRhtC40LgsINC90LDRhdC+0LTQuNGCINC4INC/0LXRgNC10LHQuNGA0LDQtdGCINCy0YHQtSDRhNC+0YDQvNGLXG4gIGVuYWJsZVZhbGlkYXRpb24oKSB7XG4gICAgdGhpcy5fc2V0RXZlbnRMaXN0ZW5lcnMoKTtcbiAgfVxufVxuIiwiZXhwb3J0IGNsYXNzIFNlY3Rpb24ge1xuICBjb25zdHJ1Y3Rvcih7IGl0ZW1zLCByZW5kZXJlciB9LCBjb250YWluZXIpIHtcbiAgICB0aGlzLl9pbml0aWFsQXJyYXkgPSBpdGVtczsgLy/QvNCw0YHRgdC40LIg0LTQsNC90L3Ri9GFINC60LDRgNGC0L7Rh9C60LhcbiAgICB0aGlzLl9jb250YWluZXIgPSBjb250YWluZXI7IC8v0LzQtdGB0YLQviDQutGD0LTQsCDQsdGD0LTQtdC8INCy0YHRgtCw0LLQu9GP0YLRjCDQutC+0L3RgtC10LnQvdC10YAsINCyICcucGhvdG9HcmlkJ1xuICAgIHRoaXMuX3JlbmRlcmVyID0gcmVuZGVyZXI7IC8v0YTRg9C90LrRhtC40Y8g0L7RgtGA0LjRgdC+0LLQutC4INC+0LTQvdC+0LPQviDRjdC70LXQvNC10L3RgtCwLdC60LDRgNGC0L7Rh9C60LhcbiAgfVxuICAvL9C80LXRgtC+0LTRiyDQtNC+0LHQsNCy0LvQtdC90LjRjyDQtdC70LXQvNC10L3RgtCwLdC60LDRgNGC0Ysg0LIg0LrQvtC90YLQtdC50L3QtdGAXG4gIGFkZEl0ZW0oZWxlbWVudCkge1xuICAgIHRoaXMuX2NvbnRhaW5lci5hcHBlbmQoZWxlbWVudCk7XG4gIH1cbiAgcHJlcGVuZEl0ZW0oZWxlbWVudCkge1xuICAgIHRoaXMuX2NvbnRhaW5lci5wcmVwZW5kKGVsZW1lbnQpO1xuICB9XG4gIC8v0LzQtdC40L7QtCDQvtGC0YDQuNGB0L7QstC60Lgg0LzQsNGB0YHQuNCy0LAg0LrQsNGA0YLQvtGH0LXQulxuICByZW5kZXJJdGVtcygpIHtcbiAgICB0aGlzLl9pbml0aWFsQXJyYXkuZm9yRWFjaCgoZGF0YSkgPT4ge1xuICAgICAgdGhpcy5fcmVuZGVyZXIoZGF0YSk7XG4gICAgfSk7XG4gIH1cbn1cbiIsImV4cG9ydCBjbGFzcyBQb3B1cCB7XG4gIGNvbnN0cnVjdG9yKHsgcG9wdXBTZWxlY3RvciB9KSB7XG4gICAgdGhpcy5fcG9wdXAgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHBvcHVwU2VsZWN0b3IpOy8vc2VsZWN0b3Ig0J7QsdC+0LfQvdCw0YfQsNC10YIg0YHRgtGA0L7QutGDLCDQv9C+INC60L7Rgi4g0LzQvtC20L3QviDQvdCw0LnRgtC4INGN0LvQtdC80LXQvdGCINCyIERPTVxuICB9XG5cbiAgLy/QvNC10YLQvtC0INC30LDQutGA0YvRgtC40Y8g0L/QvtC/0LDQv9CwINC/0YDQuCDQvdCw0LbQsNGC0LjQuCDQvdCwIFwiRXNjYXBlXCJcbiAgX2hhbmRsZUVzY0Nsb3NlID0gKGV2dCkgPT4ge1xuICAgIGlmIChldnQua2V5ID09PSBcIkVzY2FwZVwiKSB7XG4gICAgICB0aGlzLmNsb3NlKCk7XG4gICAgfVxuICB9O1xuICAvL9C80LXRgtC+0LQg0L7RgtC60YDRi9GC0LjRjyDQv9C+0L/QsNC/0LBcbiAgb3BlbigpIHtcbiAgICB0aGlzLl9wb3B1cC5jbGFzc0xpc3QuYWRkKFwicG9wdXBfb3BlbmVkXCIpOyAvL9C00L7QsdCw0LLQu9GP0LXQvCBkaXNwbGF5OiBibG9jaztcbiAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwia2V5ZG93blwiLCB0aGlzLl9oYW5kbGVFc2NDbG9zZSk7XG4gIH1cbiAgLy/QvNC10YLQvtC0INC30LDQutGA0YvRgtC40Y8g0L/QvtC/0LDQv9CwXG4gIGNsb3NlKCkge1xuICAgIHRoaXMuX3BvcHVwLmNsYXNzTGlzdC5yZW1vdmUoXCJwb3B1cF9vcGVuZWRcIik7IC8v0YPQsdC40YDQsNC10LwgZGlzcGxheTogYmxvY2ssINC/0L4g0YPQvNC+0LvRh9Cw0L3QuNGOIG5vbmU7XG4gICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwgdGhpcy5faGFuZGxlRXNjQ2xvc2UpO1xuICB9XG5cbiAgLy/QvNC10YLQvtC0INC00L7QsdCw0LLQu9C10L3QuNGPINGB0LvRg9GI0LDRgtC10LvRjyDQv9GA0Lgg0LrQu9C40LrQtSDQvdCwINC30LDRgtC10LzQvdC10L3QvdGD0Y4g0L7QsdC70LDRgdGC0Ywg0Lgg0L3QsCDQuNC60L7QvdC60YMg0LfQsNC60YDRi9GC0LjRj1xuICBzZXRFdmVudExpc3RlbmVycygpIHtcbiAgICB0aGlzLl9wb3B1cC5hZGRFdmVudExpc3RlbmVyKFwibW91c2Vkb3duXCIsIChldnQpID0+IHtcbiAgICAgIGlmIChcbiAgICAgICAgZXZ0LnRhcmdldCA9PT0gZXZ0LmN1cnJlbnRUYXJnZXQgfHwgLy8g0LfQsNC60YDRi9GC0LjQtSDQv9C+INGB0L7QstC/0LDQtNC10L3QuNGOINC/0L7Qv9Cw0L/QsCDQuCDQutC70LjQutCwXG4gICAgICAgIGV2dC50YXJnZXQuY2xhc3NMaXN0LmNvbnRhaW5zKFwicG9wdXBfX2Nsb3NlLWJ0blwiKSAvLyDQtdC70YHQuCDQutC70LjQuiDRgdC+0LLQv9Cw0LTQsNC10YIg0YEg0Y3Qu9C10LzQtdC90YLQvtC8INC60L3QvtC/0LrQuCDQt9Cw0LrRgNGL0YLQuNGPXG4gICAgICApIHtcbiAgICAgICAgdGhpcy5jbG9zZSgpO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG59XG4iLCJpbXBvcnQgeyBQb3B1cCB9IGZyb20gXCIuL1BvcHVwLmpzXCI7XG5leHBvcnQgY2xhc3MgUG9wdXBXaXRoRm9ybSBleHRlbmRzIFBvcHVwIHtcbiAgY29uc3RydWN0b3IoeyBwb3B1cFNlbGVjdG9yLCBoYW5kbGVTdWJtaXQgfSwgZm9ybSkge1xuICAgIHN1cGVyKHsgcG9wdXBTZWxlY3RvciB9KTtcbiAgICB0aGlzLl9oYW5kbGVTdWJtaXQgPSBoYW5kbGVTdWJtaXQ7XG4gICAgdGhpcy5fZm9ybSA9IGZvcm07XG4gICAgdGhpcy5faW5wdXRMaXN0ID0gdGhpcy5fZm9ybS5xdWVyeVNlbGVjdG9yQWxsKFwiLnBvcHVwX19pbnB1dFwiKTsvLyDQtNC+0YHRgtCw0ZHQvCDQstGB0LUg0Y3Qu9C10LzQtdC90YLRiyDQv9C+0LvQtdC5XG4gIH1cblxuICAvL9C/0YDQuNCy0LDRgtC90YvQuSDQvNC10YLQvtC0LCDQutC+0YLQvtGA0YvQuSDRgdC+0LHQuNGA0LDQtdGCINC00LDQvdC90YvQtSDQstGB0LXRhSDQv9C+0LvQtdC5INGE0L7RgNC80YtcbiAgX2dldElucHV0VmFsdWVzKCkge1xuICAgIC8vINGB0L7Qt9C00LDRkdC8INC/0YPRgdGC0L7QuSDQvtCx0YrQtdC60YJcbiAgICB0aGlzLl9mb3JtVmFsdWVzID0ge307XG4gICAgLy8g0LTQvtCx0LDQstC70Y/QtdC8INCyINGN0YLQvtGCINC+0LHRitC10LrRgiDQt9C90LDRh9C10L3QuNGPINCy0YHQtdGFINC/0L7Qu9C10LlcbiAgICB0aGlzLl9pbnB1dExpc3QuZm9yRWFjaCgoaW5wdXQpID0+IHtcbiAgICAgIHRoaXMuX2Zvcm1WYWx1ZXNbaW5wdXQubmFtZV0gPSBpbnB1dC52YWx1ZTtcbiAgICB9KTtcbiAgICAvLyDQstC+0LfQstGA0LDRidCw0LXQvCDQvtCx0YrQtdC60YIg0LfQvdCw0YfQtdC90LjQuSDRgdC+INC30L3QsNGH0LXQvdC40Y/QvNC4INC/0L7Qu9C10LkgaW5wdXRcbiAgICByZXR1cm4gdGhpcy5fZm9ybVZhbHVlcztcbiAgfVxuXG4gIC8v0L/RgNC40LLQsNGC0L3Ri9C5INC80LXRgtC+0LQsINC60L7RgtC+0YDRi9C5INC/0L7QtNGB0YLQsNCy0LvRj9C10YIg0LIg0LfQvdCw0YfQtdC90LjRjyDQstGB0LXRhSDQv9C+0LvQtdC5INGE0L7RgNC80Ysg0L/RgNC40YXQvtC00Y/RidC40Lkg0L7QsdGK0LXQutGCXG4gIHNldElucHV0VmFsdWVzKGRhdGEpIHtcbiAgICB0aGlzLl9pbnB1dExpc3QuZm9yRWFjaCgoaW5wdXQpID0+IHtcbiAgICAgIGlucHV0LnZhbHVlID0gZGF0YVtpbnB1dC5uYW1lXTsgLy/Qt9Cw0L3QvtGB0LjQvCDQtNGL0L3QvdGL0LUg0YLQtdC60YHRgtCwINC40Lcg0L/RgNC+0YTQsNC50LvQsCDQsiDQv9C+0LvQtSDQstCy0L7QtNCwLCDQuNGB0L/QvtC70YzQt9GD0Y8g0L7QsdGK0LXQutGCIGRhdGFcbiAgICB9KTtcbiAgfVxuXG4gIC8v0L/QtdGA0LXQt9Cw0L/QuNGB0YvQstCw0LXQvNGL0Lkg0LzQtdGC0L7QtCDQutC70LDRgdGB0LAgUG9wdXBcbiAgc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XG4gICAgc3VwZXIuc2V0RXZlbnRMaXN0ZW5lcnMoKTsgLy/QvdCw0YHQu9C10LTQvtCy0LDQvdC40LUg0LzQtdGC0L7QtNCwINC40Lcg0YDQvtC00LjRgtC10LvRjNGB0LrQvtCz0L4g0LrQu9Cw0YHRgdCwXG4gICAgdGhpcy5fZm9ybS5hZGRFdmVudExpc3RlbmVyKFwic3VibWl0XCIsIChldnQpID0+IHtcbiAgICAgIC8v0LTQvtCx0LDQstC70Y/QtdC8INC+0LHRgNCw0LHQvtGH0LjQuiDRgdCw0LHQvNC40YLQsFxuICAgICAgZXZ0LnByZXZlbnREZWZhdWx0KGV2dCk7IC8vINCt0YLQsCDRgdGC0YDQvtGH0LrQsCDQvtGC0LzQtdC90Y/QtdGCINGB0YLQsNC90LTQsNGA0YLQvdGD0Y4g0L7RgtC/0YDQsNCy0LrRgyDRhNC+0YDQvNGLLlxuICAgICAgdGhpcy5faGFuZGxlU3VibWl0KHRoaXMuX2dldElucHV0VmFsdWVzKCkpOyAvLyDQv9C10YDQtdC00LDQtdC8INGB0LDQsdC80LjRgtGDINC+0LHRitC10LrRgiDQv9C+0LvQtdC5LCDRh9GC0L7QsdGLINC40YHQv9C+0LvRjNC30L7QstCw0YLRjCDQsiDQutC+0LvQsdGN0LrQtVxuICAgICAgdGhpcy5jbG9zZSgpO1xuICAgIH0pO1xuICB9XG5cbiAgLy/Qv9C10YDQtdC30LDQv9C40YHRi9Cy0LDQtdC80YvQuSDQvNC10YLQvtC0INC60LvQsNGB0YHQsCBQb3B1cFxuICBjbG9zZSgpIHtcbiAgICBzdXBlci5jbG9zZSgpOyAvL9C90LDRgdC70LXQtNC+0LLQsNC90LjQtSDQvNC10YLQvtC00LAg0LjQtyDRgNC+0LTQuNGC0LXQu9GM0YHQutC+0LPQviDQutC70LDRgdGB0LBcbiAgICB0aGlzLl9mb3JtLnJlc2V0KCk7IC8v0L7Rh9C40YHRgtC60LAg0YTQvtGA0LzRiyDQvtGCINCy0LLQtdC00LXQvdC90YvRhSDQtNCw0L3QvdGL0YVcbiAgfVxufVxuIiwiaW1wb3J0IHsgUG9wdXAgfSBmcm9tIFwiLi9Qb3B1cC5qc1wiOyAvLyDQstGL0L/QvtC70L3QuNC70Lgg0L/RgNC40LLRj9C30LrRgyDRgNC+0LTQuNGC0LXQu9GM0YHQutC+0LPQviDQutC70LDRgdGB0LAgUG9wdXBcblxuZXhwb3J0IGNsYXNzIFBvcHVwV2l0aEltYWdlIGV4dGVuZHMgUG9wdXAge1xuICBjb25zdHJ1Y3Rvcih7IHBvcHVwU2VsZWN0b3IgfSkge1xuICAgIHN1cGVyKHsgcG9wdXBTZWxlY3RvciB9KTtcbiAgICB0aGlzLl9wbGFjZUltYWdlID0gdGhpcy5fcG9wdXAucXVlcnlTZWxlY3RvcihcIi5wb3B1cF9faW1hZ2UtcGxhY2VcIik7IC8v0LjQt9C+0LHRgNCw0LbQtdC90LjQtSDQvNC10YHRgtCwXG4gICAgdGhpcy5fcGxhY2VDYXB0aW9uID0gdGhpcy5fcG9wdXAucXVlcnlTZWxlY3RvcihcIi5wb3B1cF9fY2FwdGlvblwiKTsgLy/Qv9C+0LTQv9C40YHRjCDQuiDQuNC30L7QsdGA0LDQttC10L3QuNGOINC80LXRgdGC0LBcbiAgfVxuICAvL9C/0LXRgNC10LfQsNC/0LjRgdGL0LLQsNC10LzRi9C5INC80LXRgtC+0LQg0LrQu9Cw0YHRgdCwIFBvcHVwXG4gIG9wZW4oZGF0YSkge1xuICAgIHN1cGVyLm9wZW4oKTsgLy/QvdCw0YHQu9C10LTQvtCy0LDQvdC40LUg0LzQtdGC0L7QtNCwINC40Lcg0YDQvtC00LjRgtC10LvRjNGB0LrQvtCz0L4g0LrQu9Cw0YHRgdCwXG4gICAgdGhpcy5fcGxhY2VDYXB0aW9uLnRleHRDb250ZW50ID0gZGF0YS5uYW1lO1xuICAgIHRoaXMuX3BsYWNlSW1hZ2Uuc3JjID0gZGF0YS5saW5rO1xuICAgIHRoaXMuX3BsYWNlSW1hZ2UuYWx0ID0gYNCX0LTQtdGB0Ywg0LTQvtC70LbQvdC+INCx0YvRgtGMINC40LfQvtCx0YDQsNC20LXQvdC40LUnJHtkYXRhLm5hbWV9J2A7XG4gIH1cbn1cbiIsIi8v0YPQv9GA0LDQstC70LXQvdC40LUg0L7RgtC+0LHRgNCw0LbQtdC90LjQtdC8INC40L3RhNC+0YDQvNCw0YbQuNC4INC+INC/0L7Qu9GM0LfQvtCy0LDRgtC10LvQtSDQvdCwINGB0YLRgNCw0L3QuNGG0LVcbmV4cG9ydCBjbGFzcyBVc2VySW5mbyB7XG4gIGNvbnN0cnVjdG9yKHsgdXNlck5hbWUsIHVzZXJEZXNjcmlwdGlvbiB9KSB7XG4gICAgdGhpcy5fdXNlck5hbWUgPSB1c2VyTmFtZTtcbiAgICB0aGlzLl91c2VyRGVzY3JpcHRpb24gPSB1c2VyRGVzY3JpcHRpb247XG4gIH1cblxuICAvL9C80LXRgtC+0LQg0LLQvtC30LLRgNCw0YnQsNC10YIg0L7QsdGK0LXQutGCINGBINC00LDQvdC90YvQvNC4INC/0L7Qu9GM0LfQvtCy0LDRgtC10LvRj1xuICBnZXRVc2VySW5mbygpIHtcbiAgICBjb25zdCBvYmogPSB7XG4gICAgICBuYW1lOiB0aGlzLl91c2VyTmFtZS50ZXh0Q29udGVudCxcbiAgICAgIGpvYjogdGhpcy5fdXNlckRlc2NyaXB0aW9uLnRleHRDb250ZW50LFxuICAgIH07XG4gICAgcmV0dXJuIG9iajsgLy/QstC+0LfQstGA0LDRidCw0LXRgiDRgtC10LrRg9GJ0LXQtSDQt9C90LDRh9C10L3QuNGPIHRleHRDb250ZW50INGN0LvQtdC80LXQvdGC0L7QsiDQuNC3INC60LvQsNGB0YHQsCDQsiDQstC40LTQtSDQvtCx0YrQtdC60YLQsFxuICB9XG5cbiAgLy/QvNC10YLQvtC0INC/0YDQuNC90LjQvNCw0LXRgiDQvdC+0LLRi9C1INC00LDQvdC90YvQtSDQv9C+0LvRjNC30L7QstCw0YLQtdC70Y8g0Lgg0LTQvtCx0LDQstC70Y/QtdGCINC40YUg0L3QsCDRgdGC0YDQsNC90LjRhtGDLlxuICBzZXRVc2VySW5mbyhkYXRhKSB7XG4gICAgdGhpcy5fdXNlck5hbWUudGV4dENvbnRlbnQgPSBkYXRhLm5hbWU7XG4gICAgdGhpcy5fdXNlckRlc2NyaXB0aW9uLnRleHRDb250ZW50ID0gZGF0YS5qb2I7XG4gICAgLy/Qv9C+0LvRg9GH0LDQtdGCINC+0LHRitC10LrRgiDRgSDQutC70Y7Rh9Cw0LzQuCDQuCDRgdGC0YDQvtC60L7QstGL0LzQuCDQt9C90LDRh9C10L3QuNGP0LzQuCDQuCDRg9GB0YLQsNC90LDQstC70LjQstCw0LXRgiDQuNGFINCyINGA0LDQt9C80LXRgtC60YNcbiAgfVxufVxuIiwiZXhwb3J0IGNvbnN0IGthcmFjaGF5Q2hlcmtlc3NpYUltYWdlID0gbmV3IFVSTChcbiAgXCIuLi9pbWFnZXMvS2FyYWNoYXlDaGVya2Vzc2lhLmpwZ1wiLFxuICBpbXBvcnQubWV0YS51cmxcbik7XG5leHBvcnQgY29uc3QgYXlQZXRyaUltYWdlID0gbmV3IFVSTChcIi4uL2ltYWdlcy9BeVBldHJpLnBuZ1wiLCBpbXBvcnQubWV0YS51cmwpO1xuZXhwb3J0IGNvbnN0IHN3aXR6ZXJsYW5kSW1hZ2UgPSBuZXcgVVJMKFxuICBcIi4uL2ltYWdlcy9aZXJtYXR0U3dpdHplcmxhbmQuanBnXCIsXG4gIGltcG9ydC5tZXRhLnVybFxuKTtcbmV4cG9ydCBjb25zdCBoYXdhaUltYWdlID0gbmV3IFVSTChcbiAgXCIuLi9pbWFnZXMvS2F1YWlIYXdhaWlVU0EuanBnXCIsXG4gIGltcG9ydC5tZXRhLnVybFxuKTtcbmV4cG9ydCBjb25zdCBjaGluYUltYWdlID0gbmV3IFVSTChcIi4uL2ltYWdlcy9DaGluYS5qcGdcIiwgaW1wb3J0Lm1ldGEudXJsKTtcbmV4cG9ydCBjb25zdCBmdWppSW1hZ2UgPSBuZXcgVVJMKFwiLi4vaW1hZ2VzL01vdW50RnVqaS5qcGdcIiwgaW1wb3J0Lm1ldGEudXJsKTtcblxuLy/Qt9Cw0L/QuNGB0YvQstCw0LXQvCDQutC70LDRgdGB0Ysg0LIg0LrQvtC90YHRgtCw0L3RgtGDINC30LTQtdGB0YwsINGH0YLQvtCx0Ysg0YDQsNCx0L7RgtCw0YLRjCDQvdC1INGBINC60LvQsNGB0YHQsNC80LggSFRNTCDQtNC+0LrRg9C80LXQvdGC0LAgLCDQsCDQsiBKU1xuZXhwb3J0IGNvbnN0IHNlbGVjdG9ycyA9IHtcbiAgdGVtcGxhdGU6IFwiI3JlY3RhbmdsZS10ZW1wbGF0ZVwiLFxuICByZWN0YW5nbGU6IFwiLnJlY3RhbmdsZVwiLFxuICBpbWFnZTogXCIucmVjdGFuZ2xlX19pbWFnZVwiLFxuICB0ZXh0OiBcIi5yZWN0YW5nbGVfX3RleHRcIixcbiAgYnV0dG9uTGlrZTogXCIucmVjdGFuZ2xlX19idXR0b25cIixcbiAgYnV0dG9uVHJhc2g6IFwiLnJlY3RhbmdsZV9fYnV0dG9uLXRyYXNoXCIsXG4gIHByb2ZpbGVQb3B1cDogXCIucG9wdXBfdHlwZV9lZGl0LXByb2ZpbGVcIixcbiAgY2FyZFBvcHVwOiBcIi5wb3B1cF90eXBlX2FkZC1jYXJkXCIsXG4gIGltYWdlUG9wdXA6IFwiLnBvcHVwX3R5cGVfb3Blbi1pbWFnZVwiLFxufTtcbi8vINC+0LHRitGP0LLQu9GP0LXQvCDQvtCx0YrQtdC60YIg0YHQtdC70LXQutGC0L7RgNC+0LIg0LTQu9GPINGE0L7RgNC8XG5leHBvcnQgY29uc3QgY29uZmlnID0ge1xuICBmb3JtU2VsZWN0b3I6IFwiLnBvcHVwX19mb3JtXCIsXG4gIGlucHV0U2VsZWN0b3I6IFwiLnBvcHVwX19pbnB1dFwiLFxuICBzdWJtaXRCdXR0b25TZWxlY3RvcjogXCIucG9wdXBfX3N1Ym1pdC1idG5cIixcbiAgaW5hY3RpdmVCdXR0b25DbGFzczogXCJwb3B1cF9fc3VibWl0LWJ0bl9pbmFjdGl2ZVwiLFxuICBpbnB1dEVycm9yQ2xhc3M6IFwicG9wdXBfX2lucHV0X3R5cGVfZXJyb3JcIixcbiAgZXJyb3JDbGFzczogXCJwb3B1cF9faW5wdXQtZXJyb3JfYWN0aXZlXCIsXG4gIGlucHV0U3BhbjogXCIucG9wdXBfX2lucHV0LWVycm9yXCIsXG59O1xuXG5leHBvcnQgY29uc3QgcGhvdG9HcmlkID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5waG90by1ncmlkXCIpOyAvLyDQvtCx0YzRj9Cy0LjQu9C4INC/0LXRgNC10LzQtdC90L3Rg9GOINGB0L/QuNGB0LrQsFxuLy/QntCx0YrRj9Cy0LvRj9C10Lwg0L/QtdGA0LXQvNC90L3Ri9C1INGE0L7RgNC8XG5leHBvcnQgY29uc3QgcG9wdXBGb3JtRWRpdFByb2ZpbGUgPSBkb2N1bWVudFxuICAucXVlcnlTZWxlY3RvcihzZWxlY3RvcnMucHJvZmlsZVBvcHVwKVxuICAucXVlcnlTZWxlY3RvcihcIi5wb3B1cF9fZm9ybVwiKTsgLy/RhNC+0YDQvNCwINCf0KDQntCk0JDQmdCb0JBcbmV4cG9ydCBjb25zdCBwb3B1cEZvcm1BZGRDYXJkID0gZG9jdW1lbnRcbiAgLnF1ZXJ5U2VsZWN0b3Ioc2VsZWN0b3JzLmNhcmRQb3B1cClcbiAgLnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfX2Zvcm1cIik7IC8v0YTQvtGA0LzQsCDQndCe0JLQntCT0J4g0JzQldCh0KLQkFxuLy/QntCx0YrRj9Cy0LvRj9C10Lwg0L/QtdGA0LXQvNC90L3Ri9C1INGBINGC0LXQutGB0YLQvtCy0YvQvCDRgdC+0LTQtdGA0LbQuNC80YvQvCDQn9Cg0J7QpNCQ0JnQm9CQXG5leHBvcnQgY29uc3QgcHJvZmlsZVRpdGxlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlX190aXRsZVwiKTtcbmV4cG9ydCBjb25zdCBwcm9maWxlU3VidGl0bGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnByb2ZpbGVfX3N1YnRpdGxlXCIpO1xuLy/QntCx0YrRj9Cy0LvRj9C10Lwg0L/QtdGA0LXQvNC90L3Ri9C1INC60L3QvtC/0L7QulxuZXhwb3J0IGNvbnN0IGJ1dHRvbkVkaWRQb3B1cFByb2ZpbGUgPVxuICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnByb2ZpbGVfX2VkaXQtYnRuXCIpOyAvL9C60L3QvtC/0LrQsCDRgNC10LTQsNC60YLQvtGA0LAg0J/QoNCe0KTQkNCZ0JvQkFxuZXhwb3J0IGNvbnN0IGJ1dHRvbkFkZE5ld0NhcmQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnByb2ZpbGVfX2FkZC1idG5cIik7IC8v0LrQvdC+0L/QutCwINC00L7QsdCw0LLQu9C10L3QuNGPINCd0J7QktCe0JPQniDQnNCV0KHQotCQXG5cbi8vNiDQvNC10YHRgiDQv9C+INGD0LzQvtC70YfQsNC90LjRjlxuZXhwb3J0IGNvbnN0IGluaXRpYWxDYXJkcyA9IFtcbiAge1xuICAgIG5hbWU6IFwi0JrQsNGA0LDRh9Cw0LXQstC+LdCn0LXRgNC60LXRgdGB0LrQsNGPINCg0LXRgdC/0YPQsdC70LjQutCwXCIsXG4gICAgbGluazoga2FyYWNoYXlDaGVya2Vzc2lhSW1hZ2UsXG4gIH0sXG4gIHtcbiAgICBuYW1lOiBcItCQ0Lkg0L/QtdGC0YDQuFwiLFxuICAgIGxpbms6IGF5UGV0cmlJbWFnZSxcbiAgfSxcbiAge1xuICAgIG5hbWU6IFwi0KnQstC10LnRhtCw0YDQuNGPXCIsXG4gICAgbGluazogc3dpdHplcmxhbmRJbWFnZSxcbiAgfSxcbiAge1xuICAgIG5hbWU6IFwi0JPQsNCy0LDQuFwiLFxuICAgIGxpbms6IGhhd2FpSW1hZ2UsXG4gIH0sXG4gIHtcbiAgICBuYW1lOiBcItCS0LXQu9C40LrQsNGPINC60LjRgtCw0LnRgdC60LDRjyDRgdGC0LXQvdCwXCIsXG4gICAgbGluazogY2hpbmFJbWFnZSxcbiAgfSxcbiAge1xuICAgIG5hbWU6IFwi0KTRg9C00LfQuFwiLFxuICAgIGxpbms6IGZ1amlJbWFnZSxcbiAgfSxcbl07XG4iLCJpbXBvcnQgXCIuL2luZGV4LmNzc1wiO1xuXG5pbXBvcnQgeyBDYXJkIH0gZnJvbSBcIi4uL2NvbXBvbmVudHMvQ2FyZFwiO1xuaW1wb3J0IHsgRm9ybVZhbGlkYXRvciB9IGZyb20gXCIuLi9jb21wb25lbnRzL0Zvcm1WYWxpZGF0b3IuanNcIjtcbmltcG9ydCB7IFNlY3Rpb24gfSBmcm9tIFwiLi4vY29tcG9uZW50cy9TZWN0aW9uLmpzXCI7XG5pbXBvcnQgeyBQb3B1cCB9IGZyb20gXCIuLi9jb21wb25lbnRzL1BvcHVwLmpzXCI7XG5pbXBvcnQgeyBQb3B1cFdpdGhGb3JtIH0gZnJvbSBcIi4uL2NvbXBvbmVudHMvUG9wdXBXaXRoRm9ybS5qc1wiO1xuaW1wb3J0IHsgUG9wdXBXaXRoSW1hZ2UgfSBmcm9tIFwiLi4vY29tcG9uZW50cy9Qb3B1cFdpdGhJbWFnZS5qc1wiO1xuaW1wb3J0IHsgVXNlckluZm8gfSBmcm9tIFwiLi4vY29tcG9uZW50cy9Vc2VySW5mby5qc1wiO1xuaW1wb3J0IHtcbiAga2FyYWNoYXlDaGVya2Vzc2lhSW1hZ2UsXG4gIGF5UGV0cmlJbWFnZSxcbiAgc3dpdHplcmxhbmRJbWFnZSxcbiAgaGF3YWlJbWFnZSxcbiAgY2hpbmFJbWFnZSxcbiAgZnVqaUltYWdlLFxuICBzZWxlY3RvcnMsXG4gIGNvbmZpZyxcbn0gZnJvbSBcIi4uL3V0aWxzL2NvbnN0YXRudHMuanNcIjtcblxuaW1wb3J0IHtcbiAgcGhvdG9HcmlkLFxuICBwb3B1cEZvcm1FZGl0UHJvZmlsZSxcbiAgcG9wdXBGb3JtQWRkQ2FyZCxcbiAgcHJvZmlsZVRpdGxlLFxuICBwcm9maWxlU3VidGl0bGUsXG4gIGJ1dHRvbkVkaWRQb3B1cFByb2ZpbGUsXG4gIGJ1dHRvbkFkZE5ld0NhcmQsXG4gIGluaXRpYWxDYXJkcyxcbn0gZnJvbSBcIi4uL3V0aWxzL2NvbnN0YXRudHMuanNcIjtcblxuLy/QrdC60LfQtdC80L/Qu9GP0YAg0LrQu9Cw0YHRgdCwIFBvcHVwV2l0aEltYWdlXG5jb25zdCB6b29tUG9wdXAgPSBuZXcgUG9wdXBXaXRoSW1hZ2UoeyBwb3B1cFNlbGVjdG9yOiBzZWxlY3RvcnMuaW1hZ2VQb3B1cCB9KTtcbnpvb21Qb3B1cC5zZXRFdmVudExpc3RlbmVycygpO1xuXG5mdW5jdGlvbiBjcmVhdGVDYXJkKGRhdGEpIHtcbiAgY29uc3QgY2FyZCA9IG5ldyBDYXJkKFxuICAgIHtcbiAgICAgIGRhdGE6IGRhdGEsXG4gICAgICBoYW5kbGVPcGVuUG9wdXA6IChkYXRhKSA9PiB7XG4gICAgICAgIHpvb21Qb3B1cC5vcGVuKGRhdGEpO1xuICAgICAgfSxcbiAgICB9LFxuICAgIHNlbGVjdG9yc1xuICApO1xuICAvLyDQodC+0LfQtNCw0ZHQvCDQutCw0YDRgtC+0YfQutGDINC4INCy0L7Qt9Cy0YDQsNGJ0LDQtdC8INC90LDRgNGD0LbRg1xuICBjb25zdCBjYXJkRWxlbWVudCA9IGNhcmQuZ2VuZXJhdGVDYXJkKCk7XG4gIHJldHVybiBjYXJkRWxlbWVudDtcbn1cblxuLy/QvtGC0YDQuNGB0L7QstC60LAgNiDQutCw0YDRgtC+0YfQtdC6INC40Lcg0LzQsNGB0YHQuNCy0LAg0L/QviDRg9C80L7Qu9GH0LDQvdC40Y5cbmNvbnN0IGRlZmF1bHRDYXJkTGlzdCA9IG5ldyBTZWN0aW9uKFxuICB7XG4gICAgaXRlbXM6IGluaXRpYWxDYXJkcywgLy/QvNCw0YHRgdC40LIsINC60L7RgtC+0YDRi9C5INC/0LXRgNC10LTQsNC10Lwg0LIg0LrQvtC90YHRgtGA0YPQutGC0L7RgFxuICAgIHJlbmRlcmVyOiAoZGF0YSkgPT4ge1xuICAgICAgY29uc3QgY2FyZEVsZW1lbnQgPSBjcmVhdGVDYXJkKGRhdGEpOyAvL9GB0L7RhdGA0LDQvdGP0Y4g0LIg0L/QtdGA0LXQvNC10L3QvdGD0Y4g0YDQtdC30YPQu9GM0YLQsNGCINGB0L7Qt9C00LDQvdC40Y8g0L7QtNC90L7QuSDQutCw0YDRgtGLKi9cbiAgICAgIGRlZmF1bHRDYXJkTGlzdC5hZGRJdGVtKGNhcmRFbGVtZW50KTsgLy/QstGL0LfRi9Cy0LDQtdC8INC80LXRgtC+0LQg0LIg0Y3QutC30LXQvNC/INC60LvQsNGB0YHQsCDQuCDQtNC+0LHQsNCy0LvRj9GOINC60LDRgNGC0YMg0LIg0LrQvtC90LXRhiDRgdC/0LjRgdC60LBcbiAgICB9LFxuICB9LFxuICBwaG90b0dyaWQgLy/RgdC/0LjRgdC+0LosINC60L7RgtC+0YDRi9C5INC/0LXRgNC10LTQsNC10Lwg0LIg0LrQvtC90YHRgtGA0YPQutGC0L7RgFxuKTtcbmRlZmF1bHRDYXJkTGlzdC5yZW5kZXJJdGVtcygpOyAvL9Cy0YvQt9Cy0LDQu9C4INC+0YLRgNC40YHQvtCy0LrRgyDQstGB0LXRhSDQutCw0YDRgtC+0YfQtdC6INC/0L4g0YPQvNC+0LvRh9Cw0L3QuNGOINC60LvQsNGB0YHQsCBTZWN0aW9uXG5cbi8v0K3QutC30LXQvNC/0LvRj9GA0Ysg0LrQu9Cw0YHRgdCwIEZvcm1WYWxpZGF0b3JcbmNvbnN0IGZvcm1WYWxpZGF0b3JFZGl0UHJvZmlsZSA9IG5ldyBGb3JtVmFsaWRhdG9yKFxuICBjb25maWcsXG4gIHBvcHVwRm9ybUVkaXRQcm9maWxlXG4pO1xuZm9ybVZhbGlkYXRvckVkaXRQcm9maWxlLmVuYWJsZVZhbGlkYXRpb24oKTsgLy/QstGL0LfQvtCyINC80LXRgtC+0LTQsCDQstCw0LvQuNC00LDRhtC40Lgg0YTQvtGA0LzRi1xuY29uc3QgZm9ybVZhbGlkYXRvckFkZENhcmQgPSBuZXcgRm9ybVZhbGlkYXRvcihjb25maWcsIHBvcHVwRm9ybUFkZENhcmQpO1xuZm9ybVZhbGlkYXRvckFkZENhcmQuZW5hYmxlVmFsaWRhdGlvbigpOyAvL9Cy0YvQt9C+0LIg0LzQtdGC0L7QtNCwINCy0LDQu9C40LTQsNGG0LjQuCDRhNC+0YDQvNGLXG5cbmNvbnN0IHVzZXIgPSBuZXcgVXNlckluZm8oe1xuICB1c2VyTmFtZTogcHJvZmlsZVRpdGxlLFxuICB1c2VyRGVzY3JpcHRpb246IHByb2ZpbGVTdWJ0aXRsZSxcbn0pO1xuLy/RjdC60LfQtdC80L/Qu9GP0YAg0LrQu9Cw0YHRgdCwICBQb3B1cFdpdGhGb3JtICDQv9GA0Lgg0YHQsNCx0LzQuNGC0LUg0YTQvtGA0LzRiyDQn9Cg0J7QpNCQ0JnQm9CQXG5jb25zdCBwb3B1cFdpdGhGb3JtUHJvZmlsZSA9IG5ldyBQb3B1cFdpdGhGb3JtKFxuICB7XG4gICAgcG9wdXBTZWxlY3Rvcjogc2VsZWN0b3JzLnByb2ZpbGVQb3B1cCxcbiAgICBoYW5kbGVTdWJtaXQ6IChkYXRhKSA9PiB7XG4gICAgICB1c2VyLnNldFVzZXJJbmZvKGRhdGEpO1xuICAgIH0sIC8v0LzQtdGC0L7QtNGDINC60LvQsNGB0YHQsCBzZXRVc2VySW5mbyAg0L/RgNC40YHQstCw0LXQstCw0LXQvCDQvtCx0YrQtdC60YIg0LfQvdCw0YfQtdC90LjQuSDQuNC90L/Rg9GC0L7QslxuICB9LFxuICBwb3B1cEZvcm1FZGl0UHJvZmlsZVxuKTtcbnBvcHVwV2l0aEZvcm1Qcm9maWxlLnNldEV2ZW50TGlzdGVuZXJzKCk7IC8v0L3QsNCy0LXRiNC40LLQsNC10Lwg0L3QsNCx0L7RgCDRgdC70YPRiNCw0YLQtdC70LXQuSDRgdC+0LHRi9GC0LjQuSzRgdCw0LHQvNC40YJcblxuLy/RjdC60LfQtdC80L/Qu9GP0YAg0LrQu9Cw0YHRgdCwICBQb3B1cFdpdGhGb3JtINC/0YDQuCDRgdCw0LHQvNC40YLQtSDRhNC+0YDQvNGLINCd0J7QktCe0JPQniDQnNCV0KHQotCQXG5jb25zdCBwb3B1cFdpdGhGb3JtTmV3Q2FyZCA9IG5ldyBQb3B1cFdpdGhGb3JtKFxuICB7XG4gICAgcG9wdXBTZWxlY3Rvcjogc2VsZWN0b3JzLmNhcmRQb3B1cCxcbiAgICBoYW5kbGVTdWJtaXQ6IChkYXRhKSA9PiB7XG4gICAgICBjb25zdCBjYXJkRWxlbWVudCA9IGNyZWF0ZUNhcmQoe1xuICAgICAgICBsaW5rOiBkYXRhW1wicGxhY2UtaW1hZ2VcIl0sXG4gICAgICAgIG5hbWU6IGRhdGFbXCJwbGFjZS1uYW1lXCJdLFxuICAgICAgfSk7XG4gICAgICBkZWZhdWx0Q2FyZExpc3QucHJlcGVuZEl0ZW0oY2FyZEVsZW1lbnQpO1xuICAgIH0sXG4gIH0sXG4gIHBvcHVwRm9ybUFkZENhcmRcbik7XG5wb3B1cFdpdGhGb3JtTmV3Q2FyZC5zZXRFdmVudExpc3RlbmVycygpOyAvL9C90LDQstC10YjQuNCy0LDQtdC8INC90LDQsdC+0YAg0YHQu9GD0YjQsNGC0LXQu9C10Lkg0YHQvtCx0YvRgtC40Lks0YHQsNCx0LzQuNGCXG5cbi8vINCf0YDQuNC60YDQtdC/0LvRj9C10Lwg0YHQu9GD0YjQsNGC0LXQu9GPINC6INC60L3QvtC/0LrQtSDRgNC10LTQsNC60YLQuNGA0L7QstCw0L3QuNGPINCf0KDQntCk0JDQmdCb0JBcbmJ1dHRvbkVkaWRQb3B1cFByb2ZpbGUuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgcG9wdXBXaXRoRm9ybVByb2ZpbGUub3BlbigpO1xuICBwb3B1cFdpdGhGb3JtUHJvZmlsZS5zZXRJbnB1dFZhbHVlcyh1c2VyLmdldFVzZXJJbmZvKCkpOyAvL9Cy0LXRgNC90YPQu9C4INC+0LHRitC10LrRgiDRgdC+INC30L3QsNGH0LXQvdC40Y/QvNC4IHRleHRDb250ZW50INGN0LvQtdC80LXQvdGC0L7QsiDQuNC3INC60LvQsNGB0YHQsFxuICBmb3JtVmFsaWRhdG9yRWRpdFByb2ZpbGUucmVzZXRGaWVsZHMoKTsgLy/QstGL0LfRi9Cy0LDQtdC8INC80LXRgtC+0LQg0L7Rh9C40YHRgtC60Lgg0L/QvtC70LXQuSDQvtGCINC+0YjQuNCx0L7QuijRgtC10LrRgdGC0L7QstC+0LUg0L/QvtGP0YHQvdC10L3QuNC1INC4INC60YDQsNGB0L3QvtC1INC/0L7QtNGH0LXRgNC60LjQstCw0L3QuNC1KVxufSk7XG5cbi8vINCf0YDQuNC60YDQtdC/0LvRj9C10Lwg0YHQu9GD0YjQsNGC0LXQu9GPINC6INC60L3QvtC/0LrQtSDQtNC+0LHQsNCy0LvQtdC90LjRjyDQmtCQ0KDQotCe0KfQmtCYINChINCc0JXQodCi0J7QnFxuYnV0dG9uQWRkTmV3Q2FyZC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgZnVuY3Rpb24gKCkge1xuICBwb3B1cFdpdGhGb3JtTmV3Q2FyZC5vcGVuKCk7XG4gIGZvcm1WYWxpZGF0b3JBZGRDYXJkLmRpc2FibGVCdXR0b24oKTsgLy/Qv9C+INGD0LzQvtC70YfQsNC90LjRjiDQutC90L7Qv9C60LAg0YHQsNCx0LzQuNGC0LAg0L7RgtC60LvRjtGH0LXQvdCwXG4gIGZvcm1WYWxpZGF0b3JBZGRDYXJkLnJlc2V0RmllbGRzKCk7IC8v0LLRi9C30YvQstCw0LXQvCDQvNC10YLQvtC0INC+0YfQuNGB0YLQutC4INC/0L7Qu9C10Lkg0L7RgiDQvtGI0LjQsdC+0Loo0YLQtdC60YHRgtC+0LLQvtC1INC/0L7Rj9GB0L3QtdC90LjQtSDQuCDQutGA0LDRgdC90L7QtSDQv9C+0LTRh9C10YDQutC40LLQsNC90LjQtSlcbn0pO1xuIl0sIm5hbWVzIjpbIl9fd2VicGFja19tb2R1bGVfY2FjaGVfXyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImNhY2hlZE1vZHVsZSIsInVuZGVmaW5lZCIsImV4cG9ydHMiLCJtb2R1bGUiLCJfX3dlYnBhY2tfbW9kdWxlc19fIiwibSIsIm8iLCJvYmoiLCJwcm9wIiwiT2JqZWN0IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwicCIsImIiLCJkb2N1bWVudCIsImJhc2VVUkkiLCJzZWxmIiwibG9jYXRpb24iLCJocmVmIiwiQ2FyZCIsInNlbGVjdG9ycyIsImRhdGEiLCJoYW5kbGVPcGVuUG9wdXAiLCJldnQiLCJ0YXJnZXQiLCJjbGFzc0xpc3QiLCJ0b2dnbGUiLCJfdmlldyIsInJlbW92ZSIsInRoaXMiLCJfc2VsZWN0b3JzIiwiX25hbWUiLCJuYW1lIiwiX2xpbmsiLCJsaW5rIiwiX2hhbmRsZU9wZW5Qb3B1cCIsIl9kYXRhIiwicXVlcnlTZWxlY3RvciIsInRlbXBsYXRlIiwiY29udGVudCIsInJlY3RhbmdsZSIsImNsb25lTm9kZSIsIl9nZXRUZW1wbGF0ZSIsIl9jYXJkSW1hZ2UiLCJpbWFnZSIsIl90ZXh0IiwidGV4dCIsIl9idXR0b25MaWtlIiwiYnV0dG9uTGlrZSIsIl9idXR0b25UcmFzaCIsImJ1dHRvblRyYXNoIiwiX3RleHRBbHQiLCJzcmMiLCJ0ZXh0Q29udGVudCIsImFsdCIsIl9zZXRFdmVudExpc3RlbmVycyIsImFkZEV2ZW50TGlzdGVuZXIiLCJfaGFuZGxlQ2xpY2tMaWtlIiwiX2hhbmRsZUNsaWNrVHJhc2giLCJGb3JtVmFsaWRhdG9yIiwiZm9ybSIsIl9mb3JtIiwiX3N1Ym1pdEJ1dHRvbiIsInN1Ym1pdEJ1dHRvblNlbGVjdG9yIiwiX2lucHV0TGlzdCIsIkFycmF5IiwiZnJvbSIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJpbnB1dFNlbGVjdG9yIiwiaW5wdXRFbGVtZW50IiwiZXJyb3JNZXNzYWdlIiwiZXJyb3JFbGVtZW50IiwiaWQiLCJhZGQiLCJpbnB1dEVycm9yQ2xhc3MiLCJlcnJvckNsYXNzIiwidmFsaWRpdHkiLCJ2YWxpZCIsIl9oaWRlSW5wdXRFcnJvciIsIl9zaG93SW5wdXRFcnJvciIsInZhbGlkYXRpb25NZXNzYWdlIiwic29tZSIsImZvckVhY2giLCJpbnB1dCIsInNldEF0dHJpYnV0ZSIsImluYWN0aXZlQnV0dG9uQ2xhc3MiLCJfaGFzSW52YWxpZElucHV0IiwiZGlzYWJsZUJ1dHRvbiIsInJlbW92ZUF0dHJpYnV0ZSIsIl9jaGVja0ZpZWxkSXNWYWxpZCIsIl90b2dnbGVCdXR0b25TdGF0ZSIsIlNlY3Rpb24iLCJjb250YWluZXIiLCJpdGVtcyIsInJlbmRlcmVyIiwiX2luaXRpYWxBcnJheSIsIl9jb250YWluZXIiLCJfcmVuZGVyZXIiLCJlbGVtZW50IiwiYXBwZW5kIiwicHJlcGVuZCIsIlBvcHVwIiwicG9wdXBTZWxlY3RvciIsImtleSIsImNsb3NlIiwiX3BvcHVwIiwiX2hhbmRsZUVzY0Nsb3NlIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsImN1cnJlbnRUYXJnZXQiLCJjb250YWlucyIsIlBvcHVwV2l0aEZvcm0iLCJoYW5kbGVTdWJtaXQiLCJfaGFuZGxlU3VibWl0IiwiX2Zvcm1WYWx1ZXMiLCJ2YWx1ZSIsInByZXZlbnREZWZhdWx0IiwiX2dldElucHV0VmFsdWVzIiwicmVzZXQiLCJQb3B1cFdpdGhJbWFnZSIsIl9wbGFjZUltYWdlIiwiX3BsYWNlQ2FwdGlvbiIsIlVzZXJJbmZvIiwidXNlck5hbWUiLCJ1c2VyRGVzY3JpcHRpb24iLCJfdXNlck5hbWUiLCJfdXNlckRlc2NyaXB0aW9uIiwiam9iIiwia2FyYWNoYXlDaGVya2Vzc2lhSW1hZ2UiLCJVUkwiLCJheVBldHJpSW1hZ2UiLCJzd2l0emVybGFuZEltYWdlIiwiaGF3YWlJbWFnZSIsImNoaW5hSW1hZ2UiLCJmdWppSW1hZ2UiLCJwcm9maWxlUG9wdXAiLCJjYXJkUG9wdXAiLCJpbWFnZVBvcHVwIiwiY29uZmlnIiwiZm9ybVNlbGVjdG9yIiwiaW5wdXRTcGFuIiwicGhvdG9HcmlkIiwicG9wdXBGb3JtRWRpdFByb2ZpbGUiLCJwb3B1cEZvcm1BZGRDYXJkIiwicHJvZmlsZVRpdGxlIiwicHJvZmlsZVN1YnRpdGxlIiwiYnV0dG9uRWRpZFBvcHVwUHJvZmlsZSIsImJ1dHRvbkFkZE5ld0NhcmQiLCJpbml0aWFsQ2FyZHMiLCJ6b29tUG9wdXAiLCJjcmVhdGVDYXJkIiwiY2FyZCIsIm9wZW4iLCJnZW5lcmF0ZUNhcmQiLCJzZXRFdmVudExpc3RlbmVycyIsImRlZmF1bHRDYXJkTGlzdCIsImNhcmRFbGVtZW50IiwiYWRkSXRlbSIsInJlbmRlckl0ZW1zIiwiZm9ybVZhbGlkYXRvckVkaXRQcm9maWxlIiwiZW5hYmxlVmFsaWRhdGlvbiIsImZvcm1WYWxpZGF0b3JBZGRDYXJkIiwidXNlciIsInBvcHVwV2l0aEZvcm1Qcm9maWxlIiwic2V0VXNlckluZm8iLCJwb3B1cFdpdGhGb3JtTmV3Q2FyZCIsInByZXBlbmRJdGVtIiwic2V0SW5wdXRWYWx1ZXMiLCJnZXRVc2VySW5mbyIsInJlc2V0RmllbGRzIl0sInNvdXJjZVJvb3QiOiIifQ==